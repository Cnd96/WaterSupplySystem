<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBillPayment.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        EWgAAAAASUVORK5CYII=
</value>
  </data>
</root>